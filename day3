
1. 제네릭이 무엇인가요?
- 파라미터 타입이나 리턴 타입에 대한 정의를 외부로 미뤄 유연성을 확보하는 기술
- 컴파일 시점에 에러를 잡아주는 기술
2. 어노테이션에 대해 설명해보세요
- 어노테이션은 메타데이터라고 할 수 있음.
 메타데이터는 Application이 처리하는 데이터가 아니고, 컴파일 과정과 런타임 과정에서 코드를 어떻게 컴파일하고 처리할것인지를 알려주는 정보
3. 컬렉션 클래스에서 제네릭을 사용하는 이유를 설명해보세요
- 특정 타입만 다루지 않고, 여러 종류의 타입으로 변신할 수 있도록 컬렉션을 일반화시키기 위해
4. 데드락이 무엇이고, 해결방법에 대해 설명해보세요
- 둘 이상의 프로세스가 다른 프로세스가 점유하고 있는 자원을 서로 기다릴 때 무한 대기에 빠지는 상황
- 해결 방법 
  - 예방, 회피, 탐지 
  
 1. 예방
 - 자원의 상호 배제 조건 방지 : 한 번에 여러 프로세스가 공유 자원을 사용할 수 있게 합니다. 그러나 추후 동기화 관련 문제가 발생할 수 있습니다.
 - 점유 대기 조건 방지 : 프로세스 실행에 필요한 모든 자원을 한꺼번에 요구하고 허용할 때까지 작업을 보류해서, 나중에 또다른 자원을 점유하기 위한 대기 조건을 성립하지 않도록 합니다.
 - 비선점 조건 방지 : 이미 다른 프로세스에게 할당된 자원이 선점권이 없다고 가정할 때, 높은 우선순위의 프로세스가 해당 자원을 선점할 수 있도록 합니다.
 - 순환 대기 조건 방지 : 자원을 순환 형태로 대기하지 않도록 일정한 한 쪽 방향으로만 자원을 요구할 수 있도록 합니다.

5. JVM이 하는 역할이 무엇인가요?
 - 자바 애플리케이션 클래스 로더를 통해 읽어 들여 자바 API와 함께 실행
 - JAVA와 OS사이에서 중개자 역할을 수행하여 JAVA가 OS에 구애받지 않고 재사용을 가능하게 해줌
 - 메모리관리, Garbage collection을 수행한다.

6. 스프링에서 싱글톤 패턴에 대해 설명해보세요
 - 생성자가 여러 차례 호출되더라도 실제로 생성되는 객체는 하나이고 최초 생성 이후에 호출된 생성자는 최초의 생성자가 생성한 객체를 리턴
     -> 유연성이 떨어짐
 - 스프링은 스프링컨테이너에서 빈을 싱글톤으로 관리함 -> 해결 
 - 객체 인스턴스를 공유하기 때문에 객체 상태를 유지하게 설계하면 안됨
